{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project-reactjs\\\\Ecommerce-elementor\\\\admin\\\\src\\\\components\\\\Modal\\\\ModalUser.jsx\";\nimport React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalUser = props => {\n  const {\n    open,\n    setOpen\n  } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      BackdropProps: {\n        invisible: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalUser;\nexport default ModalUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalUser\");","map":{"version":3,"names":["React","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","ModalUser","props","open","setOpen","handleClose","invisible"],"sources":["D:/Project-reactjs/Ecommerce-elementor/admin/src/components/Modal/ModalUser.jsx"],"sourcesContent":["import React from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst ModalUser = (props) => {\r\n    const {open, setOpen}= props;\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n    <Dialog\r\n    open={open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"alert-dialog-title\"\r\n    aria-describedby=\"alert-dialog-description\"\r\n    BackdropProps={{ invisible: true }}\r\n    \r\n  >\r\n    <DialogTitle id=\"alert-dialog-title\">\r\n      {\"Use Google's location service?\"}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-description\">\r\n        Let Google help apps determine location. This means sending anonymous\r\n        location data to Google, even when no apps are running.\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose} >Disagree</Button>\r\n      <Button onClick={handleClose} autoFocus>\r\n        Agree\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n    \r\n    \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EACzB,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAiBF,KAAvB;;EAEF,MAAMG,WAAW,GAAG,MAAM;IACxBD,OAAO,CAAC,KAAD,CAAP;EACD,CAFD;;EAGA,oBACE;IAAA,uBACA,QAAC,MAAD;MACA,IAAI,EAAED,IADN;MAEA,OAAO,EAAEE,WAFT;MAGA,mBAAgB,oBAHhB;MAIA,oBAAiB,0BAJjB;MAKA,aAAa,EAAE;QAAEC,SAAS,EAAE;MAAb,CALf;MAAA,wBAQA,QAAC,WAAD;QAAa,EAAE,EAAC,oBAAhB;QAAA,UACG;MADH;QAAA;QAAA;QAAA;MAAA,QARA,eAWA,QAAC,aAAD;QAAA,uBACE,QAAC,iBAAD;UAAmB,EAAE,EAAC,0BAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXA,eAiBA,QAAC,aAAD;QAAA,wBACE,QAAC,MAAD;UAAQ,OAAO,EAAED,WAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAQ,OAAO,EAAEA,WAAjB;UAA8B,SAAS,MAAvC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBA;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CArCD;;KAAMJ,S;AAuCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}