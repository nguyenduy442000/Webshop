{"ast":null,"code":"import { loginFailed, loginStart, loginSuccess, registerFailed, registerStart, registerSuccess } from \"./authSlice\";\nimport API from \"../api/apiConfig\";\nimport { getUsersFailed, getUsersStart, getUsersSuccess } from \"./userSlice\";\nexport const loginUser = async (user, dispatch, navigate) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await API.post('auth/login', user);\n    dispatch(loginSuccess(res.data));\n    navigate('/');\n  } catch (err) {\n    dispatch(loginFailed());\n  }\n};\nexport const registerUser = async (user, dispatch, navigate) => {\n  dispatch(registerStart());\n\n  try {\n    await API.post('auth', user);\n    dispatch(registerSuccess());\n    navigate('/login');\n  } catch (err) {\n    dispatch(registerFailed());\n  }\n};\nexport const getAllUsers = async (accessToken, dispatch) => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await API.get('api/user', {\n      headers: {\n        token: `Bearer ${accessToken}`\n      }\n    });\n    dispatch(getUsersSuccess(res.data));\n  } catch (err) {\n    dispatch(getUsersFailed());\n  }\n};","map":{"version":3,"names":["loginFailed","loginStart","loginSuccess","registerFailed","registerStart","registerSuccess","API","getUsersFailed","getUsersStart","getUsersSuccess","loginUser","user","dispatch","navigate","res","post","data","err","registerUser","getAllUsers","accessToken","get","headers","token"],"sources":["D:/Project-reactjs/Ecommerce-elementor/admin/src/redux/apiRequest.js"],"sourcesContent":["import { loginFailed, loginStart, loginSuccess, registerFailed, registerStart, registerSuccess } from \"./authSlice\"\r\nimport API from \"../api/apiConfig\"\r\nimport { getUsersFailed, getUsersStart, getUsersSuccess } from \"./userSlice\";\r\nexport const loginUser = async(user,dispatch,navigate) =>{\r\n    dispatch(loginStart());\r\n    try{\r\n        const res = await API.post('auth/login',user);\r\n        dispatch(loginSuccess(res.data));\r\n        navigate('/')\r\n    }catch (err){\r\n        dispatch(loginFailed())\r\n    }\r\n}\r\n\r\nexport const registerUser  = async(user,dispatch,navigate)=>{\r\n    dispatch(registerStart());\r\n    try{\r\n        await API.post('auth',user)\r\n        dispatch(registerSuccess());\r\n        navigate('/login')\r\n    }catch(err){\r\n        dispatch(registerFailed());\r\n    }\r\n}\r\n\r\nexport const getAllUsers = async (accessToken, dispatch)=>{\r\n    dispatch(getUsersStart());\r\n    try{\r\n        const res = await API.get('api/user',{\r\n            headers: {token:`Bearer ${accessToken}`}\r\n        });\r\n        \r\n        dispatch(getUsersSuccess(res.data))\r\n    \r\n     \r\n    }catch(err){\r\n        dispatch(getUsersFailed())\r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,cAAhD,EAAgEC,aAAhE,EAA+EC,eAA/E,QAAsG,aAAtG;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,eAAxC,QAA+D,aAA/D;AACA,OAAO,MAAMC,SAAS,GAAG,OAAMC,IAAN,EAAWC,QAAX,EAAoBC,QAApB,KAAgC;EACrDD,QAAQ,CAACX,UAAU,EAAX,CAAR;;EACA,IAAG;IACC,MAAMa,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,YAAT,EAAsBJ,IAAtB,CAAlB;IACAC,QAAQ,CAACV,YAAY,CAACY,GAAG,CAACE,IAAL,CAAb,CAAR;IACAH,QAAQ,CAAC,GAAD,CAAR;EACH,CAJD,CAIC,OAAOI,GAAP,EAAW;IACRL,QAAQ,CAACZ,WAAW,EAAZ,CAAR;EACH;AACJ,CATM;AAWP,OAAO,MAAMkB,YAAY,GAAI,OAAMP,IAAN,EAAWC,QAAX,EAAoBC,QAApB,KAA+B;EACxDD,QAAQ,CAACR,aAAa,EAAd,CAAR;;EACA,IAAG;IACC,MAAME,GAAG,CAACS,IAAJ,CAAS,MAAT,EAAgBJ,IAAhB,CAAN;IACAC,QAAQ,CAACP,eAAe,EAAhB,CAAR;IACAQ,QAAQ,CAAC,QAAD,CAAR;EACH,CAJD,CAIC,OAAMI,GAAN,EAAU;IACPL,QAAQ,CAACT,cAAc,EAAf,CAAR;EACH;AACJ,CATM;AAWP,OAAO,MAAMgB,WAAW,GAAG,OAAOC,WAAP,EAAoBR,QAApB,KAA+B;EACtDA,QAAQ,CAACJ,aAAa,EAAd,CAAR;;EACA,IAAG;IACC,MAAMM,GAAG,GAAG,MAAMR,GAAG,CAACe,GAAJ,CAAQ,UAAR,EAAmB;MACjCC,OAAO,EAAE;QAACC,KAAK,EAAE,UAASH,WAAY;MAA7B;IADwB,CAAnB,CAAlB;IAIAR,QAAQ,CAACH,eAAe,CAACK,GAAG,CAACE,IAAL,CAAhB,CAAR;EAGH,CARD,CAQC,OAAMC,GAAN,EAAU;IACPL,QAAQ,CAACL,cAAc,EAAf,CAAR;EACH;AACJ,CAbM"},"metadata":{},"sourceType":"module"}