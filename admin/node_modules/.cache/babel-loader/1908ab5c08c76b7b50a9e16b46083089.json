{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    },\n    logout: {\n      isFetching: false,\n      error: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n    },\n    //logout\n    logoutStart: state => {\n      state.register.isFetching = true;\n    },\n    logoutSuccess: state => {\n      state.logout.isFetching = false;\n      state.login.currentUser = null;\n      state.logout.error = false;\n    },\n    logoutFailed: state => {\n      state.register.isFetching = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess,\n  registerStart,\n  registerSuccess,\n  registerFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","logout","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logoutStart","logoutSuccess","logoutFailed","actions","reducer"],"sources":["D:/Project-reactjs/Ecommerce-elementor/admin/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState:{\r\n        login:{\r\n            currentUser :null,\r\n            isFetching:false,\r\n            error:false\r\n        },\r\n        register:{\r\n            isFetching:false,\r\n            error:false,\r\n            success:false\r\n        },\r\n        logout:{\r\n            isFetching:false,\r\n            error:false\r\n        }\r\n    },\r\n    reducers:{\r\n        loginStart: (state)=>{\r\n            state.login.isFetching= true;\r\n        },\r\n        loginSuccess : (state, action) =>{\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state)=>{\r\n            state.login.isFetching=false;\r\n            state.login.error = true;\r\n        },\r\n\r\n        registerStart: (state)=>{\r\n            state.register.isFetching= true;\r\n        },\r\n        registerSuccess : (state) =>{\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state)=>{\r\n            state.register.isFetching=false;\r\n            state.register.error = true;\r\n        },\r\n\r\n        //logout\r\n        logoutStart: (state)=>{\r\n            state.register.isFetching= true;\r\n        },\r\n        logoutSuccess : (state) =>{\r\n            state.logout.isFetching = false;\r\n            state.login.currentUser = null;\r\n            state.logout.error = false;\r\n        },\r\n        logoutFailed: (state)=>{\r\n           state.register.isFetching = true;\r\n        },\r\n    },\r\n    \r\n   \r\n})\r\n\r\nexport const {\r\n    loginStart,\r\n    loginFailed,\r\n    loginSuccess,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed\r\n}= authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,MADqB;EAE1BC,YAAY,EAAC;IACTC,KAAK,EAAC;MACFC,WAAW,EAAE,IADX;MAEFC,UAAU,EAAC,KAFT;MAGFC,KAAK,EAAC;IAHJ,CADG;IAMTC,QAAQ,EAAC;MACLF,UAAU,EAAC,KADN;MAELC,KAAK,EAAC,KAFD;MAGLE,OAAO,EAAC;IAHH,CANA;IAWTC,MAAM,EAAC;MACHJ,UAAU,EAAC,KADR;MAEHC,KAAK,EAAC;IAFH;EAXE,CAFa;EAkB1BI,QAAQ,EAAC;IACLC,UAAU,EAAGC,KAAD,IAAS;MACjBA,KAAK,CAACT,KAAN,CAAYE,UAAZ,GAAwB,IAAxB;IACH,CAHI;IAILQ,YAAY,EAAG,CAACD,KAAD,EAAQE,MAAR,KAAkB;MAC7BF,KAAK,CAACT,KAAN,CAAYE,UAAZ,GAAyB,KAAzB;MACAO,KAAK,CAACT,KAAN,CAAYC,WAAZ,GAA0BU,MAAM,CAACC,OAAjC;MACAH,KAAK,CAACT,KAAN,CAAYG,KAAZ,GAAoB,KAApB;IACH,CARI;IASLU,WAAW,EAAGJ,KAAD,IAAS;MAClBA,KAAK,CAACT,KAAN,CAAYE,UAAZ,GAAuB,KAAvB;MACAO,KAAK,CAACT,KAAN,CAAYG,KAAZ,GAAoB,IAApB;IACH,CAZI;IAcLW,aAAa,EAAGL,KAAD,IAAS;MACpBA,KAAK,CAACL,QAAN,CAAeF,UAAf,GAA2B,IAA3B;IACH,CAhBI;IAiBLa,eAAe,EAAIN,KAAD,IAAU;MACxBA,KAAK,CAACL,QAAN,CAAeF,UAAf,GAA4B,KAA5B;MACAO,KAAK,CAACL,QAAN,CAAeD,KAAf,GAAuB,KAAvB;MACAM,KAAK,CAACL,QAAN,CAAeC,OAAf,GAAyB,IAAzB;IACH,CArBI;IAsBLW,cAAc,EAAGP,KAAD,IAAS;MACrBA,KAAK,CAACL,QAAN,CAAeF,UAAf,GAA0B,KAA1B;MACAO,KAAK,CAACL,QAAN,CAAeD,KAAf,GAAuB,IAAvB;IACH,CAzBI;IA2BL;IACAc,WAAW,EAAGR,KAAD,IAAS;MAClBA,KAAK,CAACL,QAAN,CAAeF,UAAf,GAA2B,IAA3B;IACH,CA9BI;IA+BLgB,aAAa,EAAIT,KAAD,IAAU;MACtBA,KAAK,CAACH,MAAN,CAAaJ,UAAb,GAA0B,KAA1B;MACAO,KAAK,CAACT,KAAN,CAAYC,WAAZ,GAA0B,IAA1B;MACAQ,KAAK,CAACH,MAAN,CAAaH,KAAb,GAAqB,KAArB;IACH,CAnCI;IAoCLgB,YAAY,EAAGV,KAAD,IAAS;MACpBA,KAAK,CAACL,QAAN,CAAeF,UAAf,GAA4B,IAA5B;IACF;EAtCI;AAlBiB,CAAD,CAA7B;AA8DA,OAAO,MAAM;EACTM,UADS;EAETK,WAFS;EAGTH,YAHS;EAITI,aAJS;EAKTC,eALS;EAMTC;AANS,IAOVnB,SAAS,CAACuB,OAPN;AASP,eAAevB,SAAS,CAACwB,OAAzB"},"metadata":{},"sourceType":"module"}